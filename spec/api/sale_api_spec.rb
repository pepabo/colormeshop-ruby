=begin
#カラーミーショップ API

## カラーミーショップ API  ## 利用手順  ### OAuthアプリケーションの登録  デベロッパーアカウントをお持ちでない場合は作成します。[デベロッパー登録ページ](https://api.shop-pro.jp/developers/sign_up)から登録してください。  次に、[登録ページ](https://api.shop-pro.jp/oauth/applications/new)からアプリ登録を行ってください。 スマートフォンのWebViewを利用する場合は、リダイレクトURIに`urn:ietf:wg:oauth:2.0:oob`を入力してください。  ### 認可  カラーミーショップアカウントの認証ページを開きます。認証ページのURLは、`https://api.shop-pro.jp/oauth/authorize`に必要なパラメータをつけたものです。  |パラメータ名|値| |---|---| |`client_id`|アプリ詳細画面で確認できるクライアントID| |`response_type`|\"code\"を指定| |`scope`| 別表参照| |`redirect_uri`|アプリ登録時に入力したリダイレクトURI|  `scope`は、以下のうち、アプリが利用したい機能をスペース区切りで指定してください。  |スコープ|機能| |---|---| |`read_products`|商品データの参照| |`write_products`|在庫データの更新| |`read_sales`|受注・顧客データの参照| |`write_sales`|受注データの更新| |`read_shop_coupons`|ショップクーポンの参照|  以下のようなURLとなります。  ``` https://api.shop-pro.jp/oauth/authorize?client_id=CLIENT_ID&redirect_uri=REDIRECT_URI&response_type=code&scope=read_products%20write_products ```  初めてこのページを訪れる場合は、カラーミーショップアカウントのログインIDとパスワードの入力を求められます。  ログイン後の認証ページでアプリとの連携が承認された場合は、`code`というクエリパラメータに認可コードが付与されます。承認がキャンセルされた、またはエラーが起きた場合は、 `error`パラメータにエラーの内容を表す文字列が与えられます。  アプリ登録時のリダイレクトURIに`urn:ietf:wg:oauth:2.0:oob`を指定した場合は、以下のようなURLにリダイレクトされ、 認可コードがURLの末尾に付与されます。  ``` https://api.shop-pro.jp/oauth/authorize/AUTH_CODE ```  認可コードの有効期限は発行から10分間です。  ### 認可コードをアクセストークンに交換  以下のパラメータを付けて、`https://api.shop-pro.jp/oauth/token`へリクエストを送ります。  |パラメータ名|値| |---|---| |`client_id`|アプリ詳細画面に表示されているクライアントID| |`client_secret`|アプリ詳細画面に表示されているクライアントシークレット| |`code`|取得した認可コード| |`grant_type`|\"authorization_code\"を指定| |`redirect_uri`|アプリ登録時に入力したリダイレクトURI|  curlによるリクエストの例を以下に示します。 ```console $ curl -X POST \\   -d'client_id=CLIENT_ID' \\   -d'client_secret=CLIENT_SECRET' \\   -d'code=CODE' \\   -d'grant_type=authorization_code'   \\   -d'redirect_uri=REDIRECT_URI'  \\   'https://api.shop-pro.jp/oauth/token' ```  リクエストが成功すると、以下のようなJSONが返却されます  ```json {   \"access_token\": \"d461ab8XXXXXXXXXXXXXXXXXXXXXXXXX\",   \"token_type\": \"bearer\",   \"scope\": \"read_products write_products\" } ```  アクセストークンに有効期限はありませんが、[許可済みアプリ一覧画面](https://admin.shop-pro.jp/?mode=app_use_lst)から失効させることができます。なお、同じ認可コードをアクセストークンに交換できるのは1度だけです。  ### APIの利用  取得したアクセストークンは、Authorizationヘッダに入れて使用します。以下にショップ情報を取得する例を示します。  ```console $ curl -H 'Authorization: Bearer d461ab8XXXXXXXXXXXXXXXXXXXXXXXXX' https://api.shop-pro.jp/v1/shop.json ```  ## エラー  カラーミーショップAPIでは、以下の形式の配列でエラーを表現します。  - `code` エラーコード - `message` エラーメッセージ - `status` ステータスコード  ```json {   \"errors\": [     {       \"code\": 404100,       \"message\": \"レコードが見つかりませんでした。\",       \"status\": 404     }   ] } ```  ## 都道府県コードについて APIを利用して都道府県コードを更新したり、レスポンスを参照される際には以下の表を参考にしてください。  <details>   <summary>都道府県コード一覧</summary>    |id|都道府県|   |---|---|   |1|北海道|   |2|青森県|   |3|岩手県|   |4|秋田県|   |5|宮城県|   |6|山形県|   |7|福島県|   |8|茨城県|   |9|栃木県|   |10|群馬県|   |11|埼玉県|   |12|千葉県|   |13|東京都|   |14|神奈川県|   |15|新潟県|   |16|福井県|   |17|石川県|   |18|富山県|   |19|静岡県|   |20|山梨県|   |21|長野県|   |22|愛知県|   |23|岐阜県|   |24|三重県|   |25|和歌山県|   |26|滋賀県|   |27|奈良県|   |28|京都府|   |29|大阪府|   |30|兵庫県|   |31|岡山県|   |32|広島県|   |33|鳥取県|   |34|島根県|   |35|山口県|   |36|香川県|   |37|徳島県|   |38|愛媛県|   |39|高知県|   |40|福岡県|   |41|佐賀県|   |42|長崎県|   |43|大分県|   |44|熊本県|   |45|宮崎県|   |46|鹿児島県|   |47|沖縄県|   |48|海外|  </details> 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for ColorMeShop::SaleApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SaleApi' do
  before do
    # run before each test
    @api_instance = ColorMeShop::SaleApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SaleApi' do
    it 'should create an instance of SaleApi' do
      expect(@api_instance).to be_instance_of(ColorMeShop::SaleApi)
    end
  end

  # unit tests for cancel_sale
  # 受注のキャンセル
  # 受注をキャンセルすると、以下のことが起こります。  - 該当受注の商品購入数が0になる - 該当受注の合計金額が0になる - 該当受注の&#x60;canceled&#x60;が&#x60;true&#x60;になる - 該当受注に使用されたショップポイント・GMOポイントがキャンセルされる - 該当受注の決済がAmazon Pay、LINE Pay、または楽天ペイ（オンライン決済）である場合は、決済金額が自動的に購入者へ返金される - 該当受注の決済がPayPay（イプシロン）である場合には、イプシロン側の決済もキャンセルされる - ショップポイントがキャンセルされる  販売手数料確定前の場合は以下のことが起こります。 - 販売手数料が0になる - 付与したGMOポイントがキャンセルされる - 購入者が使用したGMOポイントがキャンセルされる  現在、以下の機能はサポートしていません。 - キャンセル連動設定を利用した、クレジット（イプシロン）決済のキャンセル - 分割された受注のキャンセル 
  # @param sale_id 
  # @param [Hash] opts the optional parameters
  # @option opts [CancelSaleRequest] :cancel_sale_request 
  # @return [UpdateSale200Response]
  describe 'cancel_sale test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_sale
  # 受注データの取得
  # 
  # @param sale_id 
  # @param [Hash] opts the optional parameters
  # @return [GetSale200Response]
  describe 'get_sale test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_sales
  # 受注データのリストを取得
  # 受注データのリストを取得します。（日付が指定されていない場合は直近1週間分を取得します。）
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ids 受注IDで検索。カンマ区切りで複数指定可能
  # @option opts [String] :after 指定日時以降の受注から検索。  &#x60;after&#x60; 未指定時は &#x60;before&#x60; の指定日時の7日前の0時、  &#x60;before&#x60; 未指定時は現在から7日前の0時がデフォルト値となります。 
  # @option opts [String] :before 指定日時以前の受注から検索
  # @option opts [String] :make_date_min &#x60;after&#x60;と同義
  # @option opts [String] :make_date_max &#x60;before&#x60;と同義
  # @option opts [String] :update_date_min 指定日時以降に更新された受注から検索
  # @option opts [String] :update_date_max 指定日時以前に更新された受注から検索
  # @option opts [String] :customer_ids 購入した顧客IDで検索。カンマ区切りにすることで複数検索が可能
  # @option opts [String] :customer_name 購入した顧客名で部分一致検索
  # @option opts [String] :customer_furigana 購入した顧客フリガナがで部分一致検索
  # @option opts [String] :customer_mail 購入した顧客メールアドレスで部分一致検索
  # @option opts [String] :accepted_mail_state 受注メールの送信状態で検索  - &#x60;not_yet&#x60;: 未送信 - &#x60;sent&#x60;: 送信済み - &#x60;pass&#x60;: 送信しない 
  # @option opts [String] :paid_mail_state 入金メールの送信状態で検索  - &#x60;not_yet&#x60;: 未送信 - &#x60;sent&#x60;: 送信済み - &#x60;pass&#x60;: 送信しない 
  # @option opts [String] :delivered_mail_state 配送メールの送信状態で検索  - &#x60;not_yet&#x60;: 未送信 - &#x60;sent&#x60;: 送信済み - &#x60;pass&#x60;: 送信しない 
  # @option opts [Boolean] :mobile &#x60;true&#x60;なら携帯からの受注のみ取得
  # @option opts [Boolean] :paid &#x60;true&#x60;なら入金済みの受注のみ取得
  # @option opts [Boolean] :delivered &#x60;true&#x60;なら配送済みの受注のみ取得
  # @option opts [Boolean] :canceled &#x60;true&#x60;ならキャンセル済みの受注のみ取得
  # @option opts [String] :payment_ids 使用された決済のIDで検索。カンマ区切りで複数指定可能
  # @option opts [String] :fields レスポンスJSONのキーをカンマ区切りで指定
  # @option opts [Integer] :limit レスポンスの件数を指定。指定がない場合は10。最大100
  # @option opts [Integer] :offset 指定した数値+1件目以降のデータを返す
  # @return [GetSales200Response]
  describe 'get_sales test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for send_sales_mail
  # メールの送信
  # 受注・入金確認・商品発送メールを送ることができます。  対象の受注が分割されている場合、 受注メール、入金確認メールは、親受注でのみ指定可能です。 
  # @param sale_id 
  # @param [Hash] opts the optional parameters
  # @option opts [SendSalesMailRequest] :send_sales_mail_request 
  # @return [nil]
  describe 'send_sales_mail test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for stat_sale
  # 売上集計の取得
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :make_date 集計対象とする売上の作成日。形式は\&quot;2017-04-12\&quot;、\&quot;2017/04/12\&quot;など。指定しない場合は今日の日付が使われる
  # @return [StatSale200Response]
  describe 'stat_sale test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_sale
  # 受注データの更新
  # 該当受注の決済がAmazon Pay、LINE Pay、または楽天ペイ（オンライン決済）である場合は、熨斗・メッセージカード・ラッピングの手数料を更新すると、決済金額が自動的に購入者に請求もしくは返金されます。  ただし、LINE Payの場合は、決済金額の変更は減額のみ行うことができます。 
  # @param sale_id 
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateSaleRequest] :update_sale_request 
  # @return [UpdateSale200Response]
  describe 'update_sale test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
